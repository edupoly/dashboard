{"ast":null,"code":"import _createClass from \"E:/edupolydashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:/edupolydashboard/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"E:/edupolydashboard/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"E:/edupolydashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"E:/edupolydashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"E:/edupolydashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/edupolydashboard/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { ElementRef, NgZone, PLATFORM_ID, Renderer2, Injector, ChangeDetectorRef } from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ErrorStateMatcher, mixinDisabled, mixinErrorState } from '@angular/material/core';\nimport { QuillEditorBase, QuillService } from 'ngx-quill';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/core\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/platform-browser\";\nimport * as i4 from \"ngx-quill\"; // Boilerplate for applying mixins to _MatQuillBase\n\nvar MatQuillBase = /*#__PURE__*/function (_QuillEditorBase) {\n  _inherits(MatQuillBase, _QuillEditorBase);\n\n  var _super = _createSuper(MatQuillBase);\n\n  function MatQuillBase(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl, injector, cdr, elementRef, domSanitizer, platformId, renderer, zone, service) {\n    var _this;\n\n    _classCallCheck(this, MatQuillBase);\n\n    _this = _super.call(this, injector, elementRef, cdr, domSanitizer, platformId, renderer, zone, service);\n    _this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n    _this._parentForm = _parentForm;\n    _this._parentFormGroup = _parentFormGroup;\n    _this.ngControl = ngControl;\n    return _this;\n  }\n\n  return MatQuillBase;\n}(QuillEditorBase);\n\nvar _MatQuillMixinBase = mixinErrorState(mixinDisabled(MatQuillBase));\n\nexport var _MatQuillBase = /*#__PURE__*/(function () {\n  var _MatQuillBase = /*#__PURE__*/function (_MatQuillMixinBase2) {\n    _inherits(_MatQuillBase, _MatQuillMixinBase2);\n\n    var _super2 = _createSuper(_MatQuillBase);\n\n    function _MatQuillBase(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl, cdr, elementRef, domSanitizer, platformId, renderer, zone, injector, service) {\n      var _this2;\n\n      _classCallCheck(this, _MatQuillBase);\n\n      _this2 = _super2.call(this, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl, injector, cdr, elementRef, domSanitizer, platformId, renderer, zone, service);\n      _this2.ngControl = ngControl;\n      _this2.focused = false;\n      /*\r\n       * GETTERS & SETTERS\r\n       */\n\n      _this2.disabled = false;\n      _this2.required = false;\n      _this2._describedBy = '';\n\n      if (!!_this2.ngControl) {\n        _this2.ngControl.valueAccessor = _assertThisInitialized(_this2);\n      }\n\n      _this2.contentChangedSubscription = _this2.onContentChanged.pipe(debounceTime(300), distinctUntilChanged()).subscribe(function () {\n        _this2.updateErrorState();\n\n        _this2.stateChanges.next();\n      });\n      _this2.blurSubscription = _this2.onBlur.subscribe(function () {\n        _this2.focused = false;\n\n        if (!!_this2.ngControl && !_this2.ngControl.control.touched) {\n          _this2.ngControl.control.markAsTouched();\n\n          _this2.updateErrorState();\n        }\n\n        _this2.stateChanges.next();\n      });\n      _this2.focusSubscription = _this2.onFocus.subscribe(function () {\n        _this2.focused = true;\n\n        _this2.stateChanges.next();\n      });\n      return _this2;\n    }\n\n    _createClass(_MatQuillBase, [{\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.contentChangedSubscription.unsubscribe();\n        this.blurSubscription.unsubscribe();\n        this.focusSubscription.unsubscribe();\n\n        _get(_getPrototypeOf(_MatQuillBase.prototype), \"ngOnDestroy\", this).call(this);\n      }\n    }, {\n      key: \"empty\",\n      get: function get() {\n        return !coerceBooleanProperty(this.value);\n      }\n    }, {\n      key: \"shouldLabelFloat\",\n      get: function get() {\n        return this.focused || !this.empty;\n      }\n    }, {\n      key: \"value\",\n      get: function get() {\n        try {\n          return this.valueGetter(this.quillEditor, this.editorElem);\n        } catch (e) {\n          return;\n        }\n      },\n      set: function set(value) {\n        this.writeValue(value);\n        this.stateChanges.next();\n      }\n      /*\r\n       * METHODS\r\n       */\n\n    }, {\n      key: \"blur\",\n      value: function blur() {\n        this.editorElem.childNodes[0]['blur']();\n      }\n    }, {\n      key: \"focus\",\n      value: function focus() {\n        this.quillEditor.focus();\n      }\n    }, {\n      key: \"setDescribedByIds\",\n      value: function setDescribedByIds(ids) {\n        this._describedBy = ids.join(' ');\n      }\n    }, {\n      key: \"onContainerClick\",\n      value: function onContainerClick(event) {\n        if (!this.focused) {\n          this.quillEditor.focus();\n        }\n      }\n    }]);\n\n    return _MatQuillBase;\n  }(_MatQuillMixinBase);\n\n  _MatQuillBase.ɵfac = function _MatQuillBase_Factory(t) {\n    return new (t || _MatQuillBase)(i0.ɵɵdirectiveInject(i1.ErrorStateMatcher), i0.ɵɵdirectiveInject(i2.NgForm, 8), i0.ɵɵdirectiveInject(i2.FormGroupDirective, 8), i0.ɵɵdirectiveInject(i2.NgControl, 10), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.DomSanitizer), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i4.QuillService));\n  };\n\n  _MatQuillBase.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: _MatQuillBase,\n    hostVars: 3,\n    hostBindings: function _MatQuillBase_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-describedby\", ctx._describedBy);\n        i0.ɵɵclassProp(\"floating\", ctx.shouldLabelFloat);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      placeholder: \"placeholder\",\n      required: \"required\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return _MatQuillBase;\n})();","map":null,"metadata":{},"sourceType":"module"}