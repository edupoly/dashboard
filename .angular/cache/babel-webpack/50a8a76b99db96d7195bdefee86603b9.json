{"ast":null,"code":"import _classCallCheck from \"E:/edupolydashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"E:/edupolydashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/edupolydashboard/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { _MatQuillBase } from './mat-quill-base';\nimport * as i0 from \"@angular/core\";\nvar _c0 = [[[\"\", \"quill-editor-toolbar\", \"\"]], \"*\"];\nvar _c1 = [\"[quill-editor-toolbar]\", \"*\"]; // Increasing integer for generating unique ids for mat-quill components.\n\nvar nextUniqueId = 0;\nvar SELECTOR = 'mat-quill';\nexport var MatQuill = /*#__PURE__*/(function () {\n  var MatQuill = /*#__PURE__*/function (_MatQuillBase2) {\n    _inherits(MatQuill, _MatQuillBase2);\n\n    var _super = _createSuper(MatQuill);\n\n    function MatQuill() {\n      var _this;\n\n      _classCallCheck(this, MatQuill);\n\n      _this = _super.apply(this, arguments);\n      _this.controlType = SELECTOR;\n      _this.id = \"\".concat(SELECTOR, \"-\").concat(nextUniqueId++);\n      return _this;\n    }\n\n    return MatQuill;\n  }(_MatQuillBase);\n\n  MatQuill.ɵfac = /*@__PURE__*/function () {\n    var ɵMatQuill_BaseFactory;\n    return function MatQuill_Factory(t) {\n      return (ɵMatQuill_BaseFactory || (ɵMatQuill_BaseFactory = i0.ɵɵgetInheritedFactory(MatQuill)))(t || MatQuill);\n    };\n  }();\n\n  MatQuill.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MatQuill,\n    selectors: [[\"mat-quill\"]],\n    hostVars: 1,\n    hostBindings: function MatQuill_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\"\n    },\n    exportAs: [\"matQuill\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatFormFieldControl,\n      useExisting: MatQuill\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 2,\n    vars: 0,\n    template: function MatQuill_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵprojection(0);\n        i0.ɵɵprojection(1, 1);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MatQuill;\n})();","map":null,"metadata":{},"sourceType":"module"}